% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io_gct_cls.R
\name{readGct}
\alias{readGct}
\alias{readGctCls}
\alias{read_cls}
\title{Import ExpressionSet into gct/cls files
the C version, about 5x faster than the R implementation for the ALL dataset}
\usage{
readGct(gct.file)

readGctCls(file.base, gct.file, cls.file, add.fData.file, add.pData.file)
}
\arguments{
\item{gct.file}{The name of the gct file (only valid when file.base is
missing).}

\item{file.base}{The full file name of gct/cls files without suffixe, if not
in the current diretory, must contain the path (dirname) as well . For
instance if it is set as \code{~/my/dir/input}, then the function seeks the
file \code{~/my/dir/input.gct} and \code{~/my/dir/input.cls}.}

\item{cls.file}{The name of the cls file (only valid when file.base is
missing).}

\item{add.fData.file}{Optional, file of additional feature data, see
details.}

\item{add.pData.file}{Optional, file of additional phenotype (sample) data,
see details.}
}
\value{
A \code{ExpressionSet} object

An \code{ExpressionSet} object. The \code{Description} column in the
gct file is encoded in the \code{desc} column in the featureData of the
resulting object. The sample groups in the cls file is encoded in the
\code{cls} column in the phenoData.
}
\description{
As complementary functions to \code{writeGctCls}, \code{readGctCls} reads a
pair of gct and cls files (with same base names) into an
\code{ExpressionSet} object.
}
\details{
The \code{readGctCls} function calls internally the \code{readGct} and
\code{read_cls} functions to read in two formats respeectively.
\code{readGct} returns a barely annotated \code{ExpressionSet} object, and
\code{read_cls} returns a vector of levels encoding sample groups.

Since gct/cls contains only one property of features and samples each
(Description in the gct file as well as sample groups/levels in the cls
file), \code{readGctCls} allows users to provide additional fData/pData
files. They should be tab-delimited files, with first column machting
exactly the names of features or samples. They must be within the path
specified by the \code{path} option, namely in the same directory of gls/cls
files.sample

See example below.
}
\section{Functions}{
\itemize{
\item \code{readGct()}: readGct uses the C implementation of reading in a gct file

}}
\note{
The \code{readGct} function is a wrapper of the
\link[ribiosIO]{read_gct_matrix} function in the \code{ribiosIO} package,
which makes up the GCT matrix into an \code{ExpressionSet} object.
}
\examples{

idir <- system.file("extdata", package="ribiosExpression")

sample.eset <- readGctCls(file.base=file.path(idir, "test"))

ext.eset <- readGctCls(file.base=file.path(idir, "test"),
add.fData.file=file.path(idir, "test.add.fData.txt"),
add.pData.file=file.path(idir, "test.add.pData.txt"))

stopifnot(identical(exprs(sample.eset), exprs(ext.eset)))

## try to compare pData(sample.eset) with pData(ext.eset), and similarly
## fData(sample.eset) with fData(ext.eset)

}
\seealso{
\code{\link{writeGctCls}}. See
\code{\link[ribiosIO]{read_gct_matrix}} for underlying C code to import GCT
files.
}
\author{
Jitao David Zhang <jitao_david.zhang@roche.com>
}
